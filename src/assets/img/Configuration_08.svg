<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="56" height="38" viewBox="0 0 56 38">
  <defs>
    <linearGradient id="linear-gradient" x1="0.5" x2="0.5" y2="1" gradientUnits="objectBoundingBox">
      <stop offset="0" stop-color="#408dfb"/>
      <stop offset="1" stop-color="#b9d6ff"/>
    </linearGradient>
    <clipPath id="clip-path">
      <rect id="Rectangle_231721" data-name="Rectangle 231721" width="56" height="38" fill="url(#linear-gradient)"/>
    </clipPath>
  </defs>
  <g id="Upload_Icon" data-name="Upload Icon" clip-path="url(#clip-path)">
    <path id="Path_564805" data-name="Path 564805" d="M1.992,27.708c.07-.42-.089-.345,0-.76a9.243,9.243,0,0,1,3.889-6.08c.329-.219.88-.352.778-.76a7.078,7.078,0,0,1,1.556-6.84,5.964,5.964,0,0,1,6.222-1.52c.117.032.661-.03.778,0,.012,0,.086-.023,0,0a20.7,20.7,0,0,1,1.556-2.28c3.136-3.627,6.944-5.324,11.667-4.56a13.282,13.282,0,0,1,10.889,9.12c.238.7-.117,1.544,0,2.28.047.285.523-.059.778,0a11.1,11.1,0,0,1,8.556,11.4,11.376,11.376,0,0,1-7.778,10.64,14.337,14.337,0,0,1-3.111.76c-3.005.046-5.548,0-8.556,0h-.778V28.468c.154-.007.633,0,.778,0,.821,0,1.512-.014,2.333,0,.52.007.5-.222.778-.76s.306-.336,0-.76c-1.127-1.56-1.991-3.758-3.111-5.32-.908-1.265-2.2-2.537-3.111-3.8-.609-.844-.949-.846-1.556,0-2.046,2.85-4.178,6.268-6.222,9.12-.044.062.044-.064,0,0-.24.353-.208.368,0,.76s.346.762.778.76c1.062,0,2.012,0,3.111,0v10.64h-.778c-3.311,0-6.8-.016-10.111,0s-5.082-1.947-7-4.56a10.129,10.129,0,0,1-2.333-4.56c-.012-.084.03.082,0,0Z" transform="translate(2.675 -2.629)" fill="url(#linear-gradient)"/>
  </g>
<!-- Code injected by live-server -->
<script>
	// <![CDATA[  <-- For SVG support
	if ('WebSocket' in window) {
		(function () {
			function refreshCSS() {
				var sheets = [].slice.call(document.getElementsByTagName("link"));
				var head = document.getElementsByTagName("head")[0];
				for (var i = 0; i < sheets.length; ++i) {
					var elem = sheets[i];
					var parent = elem.parentElement || head;
					parent.removeChild(elem);
					var rel = elem.rel;
					if (elem.href && typeof rel != "string" || rel.length == 0 || rel.toLowerCase() == "stylesheet") {
						var url = elem.href.replace(/(&|\?)_cacheOverride=\d+/, '');
						elem.href = url + (url.indexOf('?') >= 0 ? '&' : '?') + '_cacheOverride=' + (new Date().valueOf());
					}
					parent.appendChild(elem);
				}
			}
			var protocol = window.location.protocol === 'http:' ? 'ws://' : 'wss://';
			var address = protocol + window.location.host + window.location.pathname + '/ws';
			var socket = new WebSocket(address);
			socket.onmessage = function (msg) {
				if (msg.data == 'reload') window.location.reload();
				else if (msg.data == 'refreshcss') refreshCSS();
			};
			if (sessionStorage && !sessionStorage.getItem('IsThisFirstTime_Log_From_LiveServer')) {
				console.log('Live reload enabled.');
				sessionStorage.setItem('IsThisFirstTime_Log_From_LiveServer', true);
			}
		})();
	}
	else {
		console.error('Upgrade your browser. This Browser is NOT supported WebSocket for Live-Reloading.');
	}
	// ]]>
</script>
</svg>
